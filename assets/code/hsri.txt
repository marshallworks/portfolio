class HSRI.ScrollProgress
	_init = false
	pageTitle = ''
	htmlStruc = null
	data = {}
	scrCount = 0
	scrDelay = 80
	scrInterupt = 10
	scrSpeedLower = 100
	scrSpeedUpper = 1000

	constructor: (@attributes) ->
		if not _init
			initial = initDataStruc()
			htmlStruc = $('.progress-scroll-meter .progress-sections').html()
			$('.progress-scroll-meter .progress-sections .progress-item').remove()
			setupDOMStruc(initial)
			bindings()
			dbc.message('HSRI Scroll Progress initialized.')
			_init = true
		else
			dbc.message('Scroll Progress already initialized.', 'caution')
		return @

	@scrollTo: (area, item) ->
		scrollPos = $(document).scrollTop()
		if $('.' + area + '#' + item).length > 0
			scrollTarget = $('.' + area + '#' + item).position().top
			scrollDiff = Math.abs(scrollTarget - scrollPos)
			animTime = scrollDiff
			if animTime > scrSpeedUpper then animTime = scrSpeedUpper
			if animTime < scrSpeedLower then animTime = scrSpeedLower
			$('html, body').animate(
				scrollTop: scrollTarget
			, animTime)
		else
			dbc.message('Unable to locate: ' + area + '/' + item, 'caution')

	bindings = ->
		setPosition()
		timeOut = false
		$(window).scroll(->
			if timeOut isnt false
				clearTimeout(timeOut)
				timeOut = false
			scrCount++
			if scrCount > scrInterupt
				setPosition()
			else
				timeOut = setTimeout(setPosition, scrDelay)
		)
		return true

	initDataStruc = ->
		data.scrollStops = []
		data.sections = {}
		total = $('.inner-content .section').length
		counter = 0
		$('.inner-content .section').each(->
			itterSection = $(this)
			itterID = itterSection.attr('id')
			itterTop = itterSection.position().top
			itterBottom = itterTop + itterSection.outerHeight(true)
			itterTitle = itterSection.find('.header h3').first().text()
			data.scrollStops.push(itterID)
			data.sections[itterID] =
				start: itterTop
				stop: itterBottom
				title: itterTitle
				target: itterID
				last: false
				active: false
			counter++
			if counter == total
				data.sections[itterID].last = true
		)
		return data

	setupDOMStruc = (data) ->
		pageTitle = $('h2').first().text()
		containerHTML = $('.progress-scroll-meter .progress-sections')
		for stopId in data.scrollStops
			stopHTML = $(htmlStruc)
			stopData = data.sections[stopId]
			stopHTML.attr('id', 'sps-' + stopId)
			stopHTML.attr('data-target', 'section/' + stopId)
			stopHTML.find('.progress-title').text(stopData.title)
			stopHTML.click((event) ->
				event.preventDefault()
				target = $(this).attr('data-target').split('/')
				area = target[0]
				item = target[1]
				HSRI.ScrollProgress.scrollTo(area, item)
			)
			containerHTML.append(stopHTML)

	setPosition = ->
		scrCount = 0
		scrollPos = $(document).scrollTop()
		windowHeight = $(window).height()
		scrollPosAdjust = windowHeight * 0.3
		# $('.inner-content').css('margin-bottom', scrollPosAdjust + 100)
		counter = 1
		for stopId in data.scrollStops
			stopData = data.sections[stopId]
			stopElement = $('#sps-' + stopId)
			stopProgress = stopElement.find('.progress-meter')
			stopElement.removeClass('active')
			scrollInView = windowHeight - 168 + scrollPos - scrollPosAdjust
			targetWidth = 0
			if scrollInView + 10 >= stopData.start and scrollInView - 8 < stopData.stop
				stopElement.addClass('active')
				height = stopData.stop - stopData.start
				posWithin = scrollInView - stopData.start
				percPos = (posWithin / height) * 100
				if percPos > 100 then percPos = 100
				targetWidth = percPos
				if not stopData.active
					stopData.active = true
					HSRI.Tracking.onScroll(pageTitle, location.pathname + 'section/' + stopData.target)
			else if scrollInView >= stopData.stop
				targetWidth = 100
				stopData.active = false
			else
				targetWidth = 0
				stopData.active = false
			stopProgress.animate(
				width: targetWidth + '%'
			, 240, 'linear')
			counter++
		lastStopId = data.scrollStops[data.scrollStops.length - 1]
		lastStop = data.sections[lastStopId]
		if scrollPos + windowHeight - 168 < lastStop.stop
			$('body').removeClass('affix-footer-to-bottom-of-content')
		else
			$('body').addClass('affix-footer-to-bottom-of-content')
